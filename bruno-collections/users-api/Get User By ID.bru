meta {
  name: Get User By ID
  type: http
  seq: 2
}

get {
  url: https://httpbin.org/get
  body: none
  auth: none
}

vars:pre-request {
  user_id: {{first_user_id}}
}

script:pre-request {
  // Récupérer l'ID utilisateur depuis les variables d'environnement
  const userId = bru.getEnvVar('first_user_id') || 'user-1';
  bru.setVar('user_id', userId);
  
  console.log('Getting user details for ID:', userId);
}

script:post-response {
  console.log('User details response received');
  console.log('Status:', res.getStatus());
  
  // Simuler les détails d'un utilisateur
  if (res.getStatus() === 200) {
    console.log('User details retrieved successfully!');
    
    const userId = bru.getVar('user_id');
    const fakeUser = {
      id: userId,
      name: bru.getEnvVar('first_user_name') || 'John Doe',
      email: bru.getEnvVar('first_user_email') || 'john.doe@example.com',
      phone: '+33123456789',
      created_at: new Date().toISOString()
    };
    
    // Sauvegarder les détails pour d'autres tests
    bru.setEnvVar('current_user_email', fakeUser.email);
    bru.setEnvVar('current_user_name', fakeUser.name);
    
    console.log('User details:', fakeUser);
  } else {
    console.log('Failed to retrieve user details, status:', res.getStatus());
  }
}