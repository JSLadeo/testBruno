meta {
  name: Update User
  type: http
  seq: 3
}

put {
  url: https://httpbin.org/put
  body: json
  auth: none
}

body:json {
  {
    "name": "{{updated_name}}",
    "phone": "{{updated_phone}}",
    "bio": "{{updated_bio}}"
  }
}

script:pre-request {
  // Charger les utilitaires globaux
  require('./global-utils.js');
  
  const userId = bru.getEnvVar('first_user_id') || 'user-1';
  bru.setVar('user_id', userId);
  
  // Générer de nouvelles données avec nos utilitaires
  const newName = utils.faker.name();
  const newPhone = utils.faker.phone();
  const timestamp = utils.formatDate(new Date());
  const bio = `Updated profile at ${timestamp}`;
  
  // Définir les variables
  bru.setVar('updated_name', newName);
  bru.setVar('updated_phone', newPhone);
  bru.setVar('updated_bio', bio);
  
  console.log('Updating user', {
    userId: userId,
    newName: newName,
    newPhone: newPhone
  });
}

script:post-response {
  console.log('User update response received');
  console.log('Status:', res.getStatus());
  
  // Simuler une réponse de mise à jour réussie
  if (res.getStatus() === 200) {
    console.log('User updated successfully!');
    
    const updatedUser = {
      id: bru.getVar('user_id'),
      name: bru.getVar('updated_name'),
      phone: bru.getVar('updated_phone'),
      bio: bru.getVar('updated_bio'),
      updated_at: new Date().toISOString()
    };
    
    console.log('Updated user:', updatedUser);
  } else {
    console.log('User update failed with status:', res.getStatus());
  }
}